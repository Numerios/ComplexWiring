package num.complexwiring.render;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelWire extends ModelBase {
    // Generated by Techne
    ModelRenderer front1;
    ModelRenderer front3;
    ModelRenderer front2;
    ModelRenderer front4;
    ModelRenderer back1;
    ModelRenderer back2;
    ModelRenderer back3;
    ModelRenderer back4;
    ModelRenderer left1;
    ModelRenderer left2;
    ModelRenderer left3;
    ModelRenderer left4;
    ModelRenderer right1;
    ModelRenderer right2;
    ModelRenderer right3;
    ModelRenderer right4;
    ModelRenderer up1;
    ModelRenderer up2;
    ModelRenderer up3;
    ModelRenderer up4;
    ModelRenderer down1;
    ModelRenderer down2;
    ModelRenderer down3;
    ModelRenderer down4;
    ModelRenderer centerBack1;
    ModelRenderer centerLeft1;
    ModelRenderer centerUp2;
    ModelRenderer centerUp1;
    ModelRenderer centerDown1;
    ModelRenderer centerDown2;
    ModelRenderer centerRight1;
    ModelRenderer centerBack2;
    ModelRenderer centerFront1;
    ModelRenderer centerFront2;
    ModelRenderer centerLeft2;
    ModelRenderer centerRight2;

    public ModelWire() {
        textureWidth = 64;
        textureHeight = 64;

        front1 = new ModelRenderer(this, 20, 0);
        front1.addBox(0F, 0F, 0F, 1, 1, 4);
        front1.setRotationPoint(-4F, 12F, -8F);
        front1.setTextureSize(64, 64);
        front1.mirror = true;
        setRotation(front1, 0F, 0F, 0F);
        front1.mirror = false;

        front3 = new ModelRenderer(this, 20, 0);
        front3.addBox(0F, 0F, 0F, 1, 1, 4);
        front3.setRotationPoint(3F, 19F, -8F);
        front3.setTextureSize(64, 64);
        front3.mirror = true;
        setRotation(front3, 0F, 0F, 0F);
        front3.mirror = false;

        front2 = new ModelRenderer(this, 20, 0);
        front2.addBox(0F, 0F, 0F, 1, 1, 4);
        front2.setRotationPoint(3F, 12F, -8F);
        front2.setTextureSize(64, 64);
        front2.mirror = true;
        setRotation(front2, 0F, 0F, 0F);
        front2.mirror = false;

        front4 = new ModelRenderer(this, 20, 0);
        front4.addBox(0F, 0F, 0F, 1, 1, 4);
        front4.setRotationPoint(-4F, 19F, -8F);
        front4.setTextureSize(64, 64);
        front4.mirror = true;
        setRotation(front4, 0F, 0F, 0F);
        front4.mirror = false;

        back1 = new ModelRenderer(this, 20, 0);
        back1.addBox(0F, 0F, 0F, 1, 1, 4);
        back1.setRotationPoint(-4F, 12F, 4F);
        back1.setTextureSize(64, 64);
        back1.mirror = true;
        setRotation(back1, 0F, 0F, 0F);
        back1.mirror = false;

        back2 = new ModelRenderer(this, 20, 0);
        back2.addBox(0F, 0F, 0F, 1, 1, 4);
        back2.setRotationPoint(3F, 12F, 4F);
        back2.setTextureSize(64, 64);
        back2.mirror = true;
        setRotation(back2, 0F, 0F, 0F);
        back2.mirror = false;

        back3 = new ModelRenderer(this, 20, 0);
        back3.addBox(0F, 0F, 0F, 1, 1, 4);
        back3.setRotationPoint(3F, 19F, 4F);
        back3.setTextureSize(64, 64);
        back3.mirror = true;
        setRotation(back3, 0F, 0F, 0F);
        back3.mirror = false;

        back4 = new ModelRenderer(this, 20, 0);
        back4.addBox(0F, 0F, 0F, 1, 1, 4);
        back4.setRotationPoint(-4F, 19F, 4F);
        back4.setTextureSize(64, 64);
        back4.mirror = true;
        setRotation(back4, 0F, 0F, 0F);
        back4.mirror = false;

        left1 = new ModelRenderer(this, 20, 0);
        left1.addBox(0F, 0F, 0F, 1, 1, 4);
        left1.setRotationPoint(4F, 12F, 4F);
        left1.setTextureSize(64, 64);
        left1.mirror = true;
        setRotation(left1, 0F, 1.570796F, 0F);
        left1.mirror = false;

        left2 = new ModelRenderer(this, 20, 0);
        left2.addBox(0F, 0F, 0F, 1, 1, 4);
        left2.setRotationPoint(4F, 12F, -3F);
        left2.setTextureSize(64, 64);
        left2.mirror = true;
        setRotation(left2, 0F, 1.570796F, 0F);
        left2.mirror = false;

        left3 = new ModelRenderer(this, 20, 0);
        left3.addBox(0F, 0F, 0F, 1, 1, 4);
        left3.setRotationPoint(4F, 19F, -3F);
        left3.setTextureSize(64, 64);
        left3.mirror = true;
        setRotation(left3, 0F, 1.570796F, 0F);
        left3.mirror = false;

        left4 = new ModelRenderer(this, 20, 0);
        left4.addBox(0F, 0F, 0F, 1, 1, 4);
        left4.setRotationPoint(4F, 19F, 4F);
        left4.setTextureSize(64, 64);
        left4.mirror = true;
        setRotation(left4, 0F, 1.570796F, 0F);
        left4.mirror = false;

        right1 = new ModelRenderer(this, 20, 0);
        right1.addBox(0F, 0F, 0F, 1, 1, 4);
        right1.setRotationPoint(-8F, 12F, 4F);
        right1.setTextureSize(64, 64);
        right1.mirror = true;
        setRotation(right1, 0F, 1.570796F, 0F);
        right1.mirror = false;

        right2 = new ModelRenderer(this, 20, 0);
        right2.addBox(0F, 0F, 0F, 1, 1, 4);
        right2.setRotationPoint(-8F, 12F, -3F);
        right2.setTextureSize(64, 64);
        right2.mirror = true;
        setRotation(right2, 0F, 1.570796F, 0F);
        right2.mirror = false;

        right3 = new ModelRenderer(this, 20, 0);
        right3.addBox(0F, 0F, 0F, 1, 1, 4);
        right3.setRotationPoint(-8F, 19F, -3F);
        right3.setTextureSize(64, 64);
        right3.mirror = true;
        setRotation(right3, 0F, 1.570796F, 0F);
        right3.mirror = false;

        right4 = new ModelRenderer(this, 20, 0);
        right4.addBox(0F, 0F, 0F, 1, 1, 4);
        right4.setRotationPoint(-8F, 19F, 4F);
        right4.setTextureSize(64, 64);
        right4.mirror = true;
        setRotation(right4, 0F, 1.570796F, 0F);
        right4.mirror = false;

        up1 = new ModelRenderer(this, 20, 0);
        up1.addBox(0F, 0F, 0F, 1, 1, 4);
        up1.setRotationPoint(-4F, 12F, 4F);
        up1.setTextureSize(64, 64);
        up1.mirror = true;
        setRotation(up1, 1.570796F, 1.570796F, 0F);

        up2 = new ModelRenderer(this, 20, 0);
        up2.addBox(0F, 0F, 0F, 1, 1, 4);
        up2.setRotationPoint(3F, 12F, 4F);
        up2.setTextureSize(64, 64);
        up2.mirror = true;
        setRotation(up2, 1.570796F, 1.570796F, 0F);

        up3 = new ModelRenderer(this, 20, 0);
        up3.addBox(0F, 0F, 0F, 1, 1, 4);
        up3.setRotationPoint(3F, 12F, -3F);
        up3.setTextureSize(64, 64);
        up3.mirror = true;
        setRotation(up3, 1.570796F, 1.570796F, 0F);

        up4 = new ModelRenderer(this, 20, 0);
        up4.addBox(0F, 0F, 0F, 1, 1, 4);
        up4.setRotationPoint(-4F, 12F, -3F);
        up4.setTextureSize(64, 64);
        up4.mirror = true;
        setRotation(up4, 1.570796F, 1.570796F, 0F);

        down1 = new ModelRenderer(this, 20, 0);
        down1.addBox(0F, 0F, 0F, 1, 1, 4);
        down1.setRotationPoint(-4F, 24F, -4F);
        down1.setTextureSize(64, 64);
        down1.mirror = true;
        setRotation(down1, 1.570796F, 0F, 0F);
        down1.mirror = false;

        down2 = new ModelRenderer(this, 20, 0);
        down2.addBox(0F, 0F, 0F, 1, 1, 4);
        down2.setRotationPoint(3F, 24F, -4F);
        down2.setTextureSize(64, 64);
        down2.mirror = true;
        setRotation(down2, 1.570796F, 0F, 0F);
        down2.mirror = false;

        down3 = new ModelRenderer(this, 20, 0);
        down3.addBox(0F, 0F, 0F, 1, 1, 4);
        down3.setRotationPoint(3F, 24F, 3F);
        down3.setTextureSize(64, 64);
        down3.mirror = true;
        setRotation(down3, 1.570796F, 0F, 0F);
        down3.mirror = false;

        down4 = new ModelRenderer(this, 20, 0);
        down4.addBox(0F, 0F, 0F, 1, 1, 4);
        down4.setRotationPoint(-4F, 24F, 3F);
        down4.setTextureSize(64, 64);
        down4.mirror = true;
        setRotation(down4, 1.570796F, 0F, 0F);
        down4.mirror = false;

        centerBack1 = new ModelRenderer(this, 0, 0);
        centerBack1.addBox(0F, 0F, 0F, 8, 1, 1);
        centerBack1.setRotationPoint(3F, 20F, 3F);
        centerBack1.setTextureSize(64, 64);
        centerBack1.mirror = true;
        setRotation(centerBack1, 0F, 0F, 4.712389F);

        centerUp1 = new ModelRenderer(this, 0, 0);
        centerUp1.addBox(0F, 0F, 0F, 8, 1, 1);
        centerUp1.setRotationPoint(-4F, 12F, 3F);
        centerUp1.setTextureSize(64, 64);
        centerUp1.mirror = true;
        setRotation(centerUp1, 0F, 0F, 0F);

        centerUp2 = new ModelRenderer(this, 0, 0);
        centerUp2.addBox(0F, 0F, 0F, 8, 1, 1);
        centerUp2.setRotationPoint(-4F, 12F, -4F);
        centerUp2.setTextureSize(64, 64);
        centerUp2.mirror = true;
        setRotation(centerUp2, 0F, 0F, 0F);

        centerDown1 = new ModelRenderer(this, 0, 0);
        centerDown1.addBox(0F, 0F, 0F, 8, 1, 1);
        centerDown1.setRotationPoint(-4F, 19F, 3F);
        centerDown1.setTextureSize(64, 64);
        centerDown1.mirror = true;
        setRotation(centerDown1, 0F, 0F, 0F);

        centerDown2 = new ModelRenderer(this, 0, 0);
        centerDown2.addBox(0F, 0F, 0F, 8, 1, 1);
        centerDown2.setRotationPoint(-4F, 19F, -4F);
        centerDown2.setTextureSize(64, 64);
        centerDown2.mirror = true;
        setRotation(centerDown2, 0F, 0F, 0F);

        centerBack2 = new ModelRenderer(this, 0, 0);
        centerBack2.addBox(0F, 0F, 0F, 8, 1, 1);
        centerBack2.setRotationPoint(-4F, 20F, 3F);
        centerBack2.setTextureSize(64, 64);
        centerBack2.mirror = true;
        setRotation(centerBack2, 0F, 0F, 4.712389F);

        centerFront1 = new ModelRenderer(this, 0, 0);
        centerFront1.addBox(0F, 0F, 0F, 8, 1, 1);
        centerFront1.setRotationPoint(-4F, 20F, -4F);
        centerFront1.setTextureSize(64, 64);
        centerFront1.mirror = true;
        setRotation(centerFront1, 0F, 0F, 4.712389F);

        centerFront2 = new ModelRenderer(this, 0, 0);
        centerFront2.addBox(0F, 0F, 0F, 8, 1, 1);
        centerFront2.setRotationPoint(3F, 20F, -4F);
        centerFront2.setTextureSize(64, 64);
        centerFront2.mirror = true;
        setRotation(centerFront2, 0F, 0F, 4.712389F);

        centerLeft2 = new ModelRenderer(this, 0, 0);
        centerLeft2.addBox(0F, 0F, 0F, 8, 1, 1);
        // centerLeft2.setRotationPoint(3F, 20F, -4F);
        centerLeft2.setRotationPoint(4F, 20F, 4F);
        centerLeft2.setTextureSize(64, 64);
        centerLeft2.mirror = true;
        setRotation(centerLeft2, 0F, 1.570796F, 3.141593F);

        centerLeft1 = new ModelRenderer(this, 0, 0);
        centerLeft1.addBox(0F, 0F, 0F, 8, 1, 1);
        // centerLeft1.setRotationPoint(3F, 13F, -4F);
        centerLeft1.setRotationPoint(4F, 13F, 4F);
        centerLeft1.setTextureSize(64, 64);
        centerLeft1.mirror = true;
        setRotation(centerLeft1, 0F, 1.570796F, 3.141593F);
        centerLeft1.mirror = false;

        centerRight2 = new ModelRenderer(this, 0, 0);
        centerRight2.addBox(0F, 0F, 0F, 8, 1, 1);
        // centerRight2.setRotationPoint(-4F, 20F, -4F);
        centerRight2.setRotationPoint(-3F, 20F, 4F);
        centerRight2.setTextureSize(64, 64);
        centerRight2.mirror = true;
        setRotation(centerRight2, 0F, 1.570796F, 3.141593F);

        centerRight1 = new ModelRenderer(this, 0, 0);
        centerRight1.addBox(0F, 0F, 0F, 8, 1, 1);
        // centerRight1.setRotationPoint(-4F, 13F, -4F);
        centerRight1.setRotationPoint(-3F, 13F, 4F);
        centerRight1.setTextureSize(64, 64);
        centerRight1.mirror = true;
        setRotation(centerRight1, 0F, 1.570796F, 3.141593F);
        centerRight1.mirror = false;

    }

    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
        super.render(entity, f, f1, f2, f3, f4, f5);
        setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    }

    public void renderLeft() {
        left1.render(0.0625F);
        left2.render(0.0625F);
        left3.render(0.0625F);
        left4.render(0.0625F);
    }

    public void renderRight() {
        right1.render(0.0625F);
        right2.render(0.0625F);
        right3.render(0.0625F);
        right4.render(0.0625F);
    }

    public void renderFront() {
        front1.render(0.0625F);
        front2.render(0.0625F);
        front3.render(0.0625F);
        front4.render(0.0625F);
    }

    public void renderBack() {
        back1.render(0.0625F);
        back2.render(0.0625F);
        back3.render(0.0625F);
        back4.render(0.0625F);
    }

    public void renderUp() {
        up1.render(0.0625F);
        up2.render(0.0625F);
        up3.render(0.0625F);
        up4.render(0.0625F);
    }

    public void renderDown() {
        down1.render(0.0625F);
        down2.render(0.0625F);
        down3.render(0.0625F);
        down4.render(0.0625F);
    }

    public void renderCenterLeft() {
        centerLeft1.render(0.0625F);
        centerLeft2.render(0.0625F);
    }

    public void renderCenterRight() {
        centerRight1.render(0.0625F);
        centerRight2.render(0.0625F);
    }

    public void renderCenterLeft2() {
        centerLeft1.render(0.0625F);
        centerLeft2.render(0.0625F);
        centerFront2.render(0.0625F);
        centerBack1.render(0.0625F);
    }

    public void renderCenterRight2() {
        centerRight1.render(0.0625F);
        centerRight2.render(0.0625F);
        centerBack2.render(0.0625F);
        centerFront1.render(0.0625F);
    }

    public void renderCenterFront() {
        centerFront1.render(0.0625F);
        centerFront2.render(0.0625F);
    }

    public void renderCenterBack() {
        centerBack1.render(0.0625F);
        centerBack2.render(0.0625F);
    }

    public void renderCenterUp() {
        /*
         * centerUp1.render(0.0625F); centerUp2.render(0.0625F);
         */
    }

    public void renderCenterDown() {
        /*
         * centerDown1.render(0.0625F); centerDown2.render(0.0625F);
         */
    }

    public void renderCenterFront2() {
        centerFront1.render(0.0625F);
        centerFront2.render(0.0625F);
        centerDown2.render(0.0625F);
        centerUp2.render(0.0625F);
    }

    public void renderCenterBack2() {
        centerBack1.render(0.0625F);
        centerBack2.render(0.0625F);
        centerDown1.render(0.0625F);
        centerUp1.render(0.0625F);
    }

    // TODO: A clever algorithm that calculates proper sides to render.
    private void setRotation(ModelRenderer model, float x, float y, float z) {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }

    @Override
    public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity) {
        super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    }
}
